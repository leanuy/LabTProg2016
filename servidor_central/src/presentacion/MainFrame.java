package presentacion;

import espotify.Fabrica;
import espotify.datatypes.DataAlbum;
import espotify.datatypes.DataAlbumExt;
import espotify.datatypes.DataArtista;
import espotify.datatypes.DataCliente;
import espotify.datatypes.DataDefecto;
import espotify.datatypes.DataGenero;
import espotify.datatypes.DataParticular;
import espotify.datatypes.DataTema;
import espotify.datatypes.DataTemaArchivo;
import espotify.datatypes.DataTemaWeb;
import espotify.datatypes.TipoSuscripcion;
import espotify.interfaces.IActualizarSuscripcion;
import espotify.interfaces.IAgregarTemaLista;
import espotify.interfaces.IAltaAlbum;
import espotify.interfaces.IAltaGenero;
import espotify.interfaces.IAltaLista;
import espotify.interfaces.IAltaPerfil;
import espotify.interfaces.IAltaSeguir;
import espotify.interfaces.IFavoritear;
import espotify.interfaces.IPublicarLista;
import espotify.interfaces.web.IObtenerAudio;
import java.awt.Image;

import java.awt.Toolkit;
import java.awt.image.BufferedImage;
import java.io.BufferedInputStream;
import java.io.File;
import java.io.FileInputStream;
import java.io.InputStream;
import java.net.URL;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Properties;
import javax.imageio.ImageIO;
import javax.swing.JDialog;
import javax.swing.JOptionPane;
import servidor.Publicador;

public class MainFrame extends javax.swing.JFrame {

    /**
     * Creates new form MainFrame
     */
    public MainFrame() {

        initComponents();
        this.setSize((int)(Toolkit.getDefaultToolkit().getScreenSize().getWidth()), (int)(Toolkit.getDefaultToolkit().getScreenSize().getHeight()));
        
        
        //MainPanel.setLayout(new FlowLayout());
        this.setLocationRelativeTo(null);
        this.setTitle("ESPOTIFY");
        Publicador p = new Publicador();
        p.publicar();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        internalAltaAlbum = new javax.swing.JInternalFrame();
        internalAltaPerfil = new javax.swing.JInternalFrame();
        AltaPerfil_nickname_label = new javax.swing.JLabel();
        AltaPerfil_nickname_input = new javax.swing.JTextField();
        AltaPerfil_nombre_label = new javax.swing.JLabel();
        AltaPerfil_nombre_input = new javax.swing.JTextField();
        AltaPerfil_apellido_label = new javax.swing.JLabel();
        AltaPerfil_apellido_input = new javax.swing.JTextField();
        AltaPerfil_email_label = new javax.swing.JLabel();
        AltaPerfil_email_input = new javax.swing.JTextField();
        AltaPerfil_fechanacimiento_label = new javax.swing.JLabel();
        AltaPerfil_tipousuario_label = new javax.swing.JLabel();
        AltaPerfil_tipousuario_input = new javax.swing.JComboBox<>();
        AltaPerfil_botonimagen_button = new javax.swing.JButton();
        AltaPerfil_url_label = new javax.swing.JLabel();
        AltaPerfil_url_input = new javax.swing.JTextField();
        AltaPerfil_bio_label = new javax.swing.JLabel();
        AltaPerfil_bio_container = new javax.swing.JScrollPane();
        AltaPerfil_bio_input = new javax.swing.JTextArea();
        MainPanel = new javax.swing.JPanel();
        menuPrincipal = new javax.swing.JMenuBar();
        sesionDropDown = new javax.swing.JMenu();
        cerrarOption = new javax.swing.JMenuItem();
        altasDropDown = new javax.swing.JMenu();
        altaPerfil = new javax.swing.JMenuItem();
        altaGeneroMenuItem = new javax.swing.JMenuItem();
        altaLista = new javax.swing.JMenuItem();
        consultasDropDown = new javax.swing.JMenu();
        consultaClienteMenuItem = new javax.swing.JMenuItem();
        consultaArtistaMenuItem = new javax.swing.JMenuItem();
        consultaAlbumMenuItem = new javax.swing.JMenuItem();
        consultaListaMenuItem = new javax.swing.JMenuItem();
        registroAccesosMenuItem = new javax.swing.JMenuItem();
        eliminadosMenuItem = new javax.swing.JMenuItem();
        socialMenu = new javax.swing.JMenu();
        seguirMenuItem = new javax.swing.JMenuItem();
        dejarSeguirMenuItem = new javax.swing.JMenuItem();
        favoritearMItem = new javax.swing.JMenuItem();
        desfavoritearMItem = new javax.swing.JMenuItem();
        listasMenu = new javax.swing.JMenu();
        publicarListaMenuItem = new javax.swing.JMenuItem();
        agregarTemaListaMenuItem = new javax.swing.JMenuItem();
        quitarTemaLista = new javax.swing.JMenuItem();
        menuDatos = new javax.swing.JMenu();
        cargarDatosDePrueba = new javax.swing.JMenuItem();
        suscripcionesMenu = new javax.swing.JMenu();
        suscripcionesMenuItem = new javax.swing.JMenuItem();

        internalAltaAlbum.setBorder(null);
        internalAltaAlbum.setClosable(true);
        internalAltaAlbum.setTitle("Alta Album");
        internalAltaAlbum.setVisible(true);

        javax.swing.GroupLayout internalAltaAlbumLayout = new javax.swing.GroupLayout(internalAltaAlbum.getContentPane());
        internalAltaAlbum.getContentPane().setLayout(internalAltaAlbumLayout);
        internalAltaAlbumLayout.setHorizontalGroup(
            internalAltaAlbumLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 669, Short.MAX_VALUE)
        );
        internalAltaAlbumLayout.setVerticalGroup(
            internalAltaAlbumLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 231, Short.MAX_VALUE)
        );

        internalAltaPerfil.setClosable(true);
        internalAltaPerfil.setTitle("Alta Perfil");
        internalAltaPerfil.setToolTipText("");
        internalAltaPerfil.setPreferredSize(new java.awt.Dimension(1422, 800));
        try {
            internalAltaPerfil.setSelected(true);
        } catch (java.beans.PropertyVetoException e1) {
            e1.printStackTrace();
        }
        internalAltaPerfil.setVisible(true);

        AltaPerfil_nickname_label.setText("Nickname");

        AltaPerfil_nombre_label.setText("Nombre");

        AltaPerfil_apellido_label.setText("Apellido");

        AltaPerfil_email_label.setText("Email");

        AltaPerfil_fechanacimiento_label.setText("Fecha de nacimiento");

        AltaPerfil_tipousuario_label.setText("Tipo de Usuario");

        AltaPerfil_tipousuario_input.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Cliente", "Artista" }));

        AltaPerfil_botonimagen_button.setText("Elegir imágen de perfil");

        AltaPerfil_url_label.setText("Página web");

        AltaPerfil_bio_label.setText("Bio");

        AltaPerfil_bio_input.setColumns(20);
        AltaPerfil_bio_input.setRows(5);
        AltaPerfil_bio_container.setViewportView(AltaPerfil_bio_input);

        javax.swing.GroupLayout internalAltaPerfilLayout = new javax.swing.GroupLayout(internalAltaPerfil.getContentPane());
        internalAltaPerfil.getContentPane().setLayout(internalAltaPerfilLayout);
        internalAltaPerfilLayout.setHorizontalGroup(
            internalAltaPerfilLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, internalAltaPerfilLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(internalAltaPerfilLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(AltaPerfil_fechanacimiento_label)
                    .addComponent(AltaPerfil_botonimagen_button)
                    .addGroup(internalAltaPerfilLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, internalAltaPerfilLayout.createSequentialGroup()
                            .addGroup(internalAltaPerfilLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(AltaPerfil_nombre_label)
                                .addComponent(AltaPerfil_nickname_label)
                                .addComponent(AltaPerfil_apellido_label)
                                .addComponent(AltaPerfil_email_label)
                                .addComponent(AltaPerfil_tipousuario_label))
                            .addGap(62, 62, 62)
                            .addGroup(internalAltaPerfilLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addGroup(internalAltaPerfilLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(AltaPerfil_nombre_input, javax.swing.GroupLayout.PREFERRED_SIZE, 249, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(AltaPerfil_nickname_input, javax.swing.GroupLayout.PREFERRED_SIZE, 249, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(internalAltaPerfilLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(AltaPerfil_apellido_input)
                                        .addComponent(AltaPerfil_email_input, javax.swing.GroupLayout.PREFERRED_SIZE, 249, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addComponent(AltaPerfil_tipousuario_input, javax.swing.GroupLayout.PREFERRED_SIZE, 249, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGroup(internalAltaPerfilLayout.createSequentialGroup()
                            .addGroup(internalAltaPerfilLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(AltaPerfil_url_label)
                                .addComponent(AltaPerfil_bio_label))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(internalAltaPerfilLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(AltaPerfil_url_input, javax.swing.GroupLayout.DEFAULT_SIZE, 249, Short.MAX_VALUE)
                                .addComponent(AltaPerfil_bio_container)))))
                .addGap(274, 274, 274))
        );
        internalAltaPerfilLayout.setVerticalGroup(
            internalAltaPerfilLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(internalAltaPerfilLayout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(internalAltaPerfilLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(AltaPerfil_nickname_label)
                    .addComponent(AltaPerfil_nickname_input, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(internalAltaPerfilLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(AltaPerfil_nombre_input, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(AltaPerfil_nombre_label))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(internalAltaPerfilLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(AltaPerfil_apellido_input, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(AltaPerfil_apellido_label))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(internalAltaPerfilLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(AltaPerfil_email_input, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(AltaPerfil_email_label))
                .addGap(18, 18, 18)
                .addComponent(AltaPerfil_fechanacimiento_label)
                .addGap(25, 25, 25)
                .addGroup(internalAltaPerfilLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(AltaPerfil_tipousuario_input, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(AltaPerfil_tipousuario_label))
                .addGap(18, 18, 18)
                .addComponent(AltaPerfil_botonimagen_button)
                .addGap(18, 18, 18)
                .addGroup(internalAltaPerfilLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(AltaPerfil_url_label)
                    .addComponent(AltaPerfil_url_input, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(internalAltaPerfilLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(AltaPerfil_bio_container, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(AltaPerfil_bio_label))
                .addContainerGap(97, Short.MAX_VALUE))
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBounds(new java.awt.Rectangle(0, 0, 200, 700));
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        getContentPane().setLayout(new javax.swing.OverlayLayout(getContentPane()));

        javax.swing.GroupLayout MainPanelLayout = new javax.swing.GroupLayout(MainPanel);
        MainPanel.setLayout(MainPanelLayout);
        MainPanelLayout.setHorizontalGroup(
            MainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 669, Short.MAX_VALUE)
        );
        MainPanelLayout.setVerticalGroup(
            MainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 409, Short.MAX_VALUE)
        );

        getContentPane().add(MainPanel);

        sesionDropDown.setText("Sesion");

        cerrarOption.setText("Cerrar");
        cerrarOption.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cerrarOptionActionPerformed(evt);
            }
        });
        sesionDropDown.add(cerrarOption);

        menuPrincipal.add(sesionDropDown);

        altasDropDown.setText("Altas");

        altaPerfil.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_P, java.awt.event.InputEvent.CTRL_MASK));
        altaPerfil.setText("Alta Perfil");
        altaPerfil.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                altaPerfilActionPerformed(evt);
            }
        });
        altasDropDown.add(altaPerfil);

        altaGeneroMenuItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_G, java.awt.event.InputEvent.CTRL_MASK));
        altaGeneroMenuItem.setText("Alta Género");
        altaGeneroMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                altaGeneroMenuItemActionPerformed(evt);
            }
        });
        altasDropDown.add(altaGeneroMenuItem);

        altaLista.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_L, java.awt.event.InputEvent.CTRL_MASK));
        altaLista.setText("Alta Lista");
        altaLista.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                altaListaActionPerformed(evt);
            }
        });
        altasDropDown.add(altaLista);

        menuPrincipal.add(altasDropDown);

        consultasDropDown.setText("Consultas");

        consultaClienteMenuItem.setText("Consulta perfil Cliente");
        consultaClienteMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                consultaClienteMenuItemActionPerformed(evt);
            }
        });
        consultasDropDown.add(consultaClienteMenuItem);

        consultaArtistaMenuItem.setText("Consulta perfil Artista");
        consultaArtistaMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                consultaArtistaMenuItemActionPerformed(evt);
            }
        });
        consultasDropDown.add(consultaArtistaMenuItem);

        consultaAlbumMenuItem.setText("Consulta Album");
        consultaAlbumMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                consultaAlbumMenuItemActionPerformed(evt);
            }
        });
        consultasDropDown.add(consultaAlbumMenuItem);

        consultaListaMenuItem.setText("Consulta Lista");
        consultaListaMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                consultaListaMenuItemActionPerformed(evt);
            }
        });
        consultasDropDown.add(consultaListaMenuItem);

        registroAccesosMenuItem.setText("Registro de Accesos");
        registroAccesosMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                registroAccesosMenuItemActionPerformed(evt);
            }
        });
        consultasDropDown.add(registroAccesosMenuItem);

        eliminadosMenuItem.setText("Artistas Eliminados");
        eliminadosMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                eliminadosMenuItemActionPerformed(evt);
            }
        });
        consultasDropDown.add(eliminadosMenuItem);

        menuPrincipal.add(consultasDropDown);

        socialMenu.setText("Social");

        seguirMenuItem.setText("Seguir Usuario");
        seguirMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                seguirMenuItemActionPerformed(evt);
            }
        });
        socialMenu.add(seguirMenuItem);

        dejarSeguirMenuItem.setText("Dejar de Seguir Usuario");
        dejarSeguirMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dejarSeguirMenuItemActionPerformed(evt);
            }
        });
        socialMenu.add(dejarSeguirMenuItem);

        favoritearMItem.setText("Agregar a Favoritos");
        favoritearMItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                favoritearMItemActionPerformed(evt);
            }
        });
        socialMenu.add(favoritearMItem);

        desfavoritearMItem.setText("Quitar de Favoritos");
        desfavoritearMItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                desfavoritearMItemActionPerformed(evt);
            }
        });
        socialMenu.add(desfavoritearMItem);

        menuPrincipal.add(socialMenu);

        listasMenu.setText("Listas");

        publicarListaMenuItem.setText("Publicar Lista");
        publicarListaMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                publicarListaMenuItemActionPerformed(evt);
            }
        });
        listasMenu.add(publicarListaMenuItem);

        agregarTemaListaMenuItem.setText("Agregar Tema a Lista");
        agregarTemaListaMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                agregarTemaListaMenuItemActionPerformed(evt);
            }
        });
        listasMenu.add(agregarTemaListaMenuItem);

        quitarTemaLista.setText("Quitar Tema Lista");
        quitarTemaLista.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                quitarTemaListaActionPerformed(evt);
            }
        });
        listasMenu.add(quitarTemaLista);

        menuPrincipal.add(listasMenu);

        menuDatos.setText("Datos de Prueba");

        cargarDatosDePrueba.setText("Cargar");
        cargarDatosDePrueba.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cargarDatosDePruebaActionPerformed(evt);
            }
        });
        menuDatos.add(cargarDatosDePrueba);

        menuPrincipal.add(menuDatos);

        suscripcionesMenu.setText("Suscripciones");

        suscripcionesMenuItem.setText("Actualizar Suscripción");
        suscripcionesMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                suscripcionesMenuItemActionPerformed(evt);
            }
        });
        suscripcionesMenu.add(suscripcionesMenuItem);

        menuPrincipal.add(suscripcionesMenu);

        setJMenuBar(menuPrincipal);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cerrarOptionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cerrarOptionActionPerformed
        this.dispose();
    }//GEN-LAST:event_cerrarOptionActionPerformed

    private void altaPerfilActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_altaPerfilActionPerformed
        MainPanel.removeAll();
        InternalAltaPerfil frameAltaPerfil = new InternalAltaPerfil();
        MainPanel.add(frameAltaPerfil);
        MainPanel.repaint();
        frameAltaPerfil.setVisible(true);
        
    }//GEN-LAST:event_altaPerfilActionPerformed

    private void seguirMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_seguirMenuItemActionPerformed
        MainPanel.removeAll();
        SeguirUsuario seguir = new SeguirUsuario();
        MainPanel.add(seguir);
        MainPanel.repaint();
        seguir.setVisible(true);
    }//GEN-LAST:event_seguirMenuItemActionPerformed

    private void dejarSeguirMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dejarSeguirMenuItemActionPerformed
        MainPanel.removeAll();
        DejarSeguirUsuario dejar = new DejarSeguirUsuario();
        MainPanel.add(dejar);
        MainPanel.repaint();
        dejar.setVisible(true);
    }//GEN-LAST:event_dejarSeguirMenuItemActionPerformed

    private void consultaClienteMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_consultaClienteMenuItemActionPerformed
        MainPanel.removeAll();
        ConsultaCliente cons = new ConsultaCliente();
        MainPanel.add(cons);
        MainPanel.repaint();
        cons.setVisible(true);
    }//GEN-LAST:event_consultaClienteMenuItemActionPerformed

    private void consultaArtistaMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_consultaArtistaMenuItemActionPerformed
        MainPanel.removeAll();
        ConsultaArtista art = new ConsultaArtista();
        MainPanel.add(art);
        MainPanel.repaint();
        art.setVisible(true);
    }//GEN-LAST:event_consultaArtistaMenuItemActionPerformed

    private void altaListaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_altaListaActionPerformed
        MainPanel.removeAll();
        AltaLista frameAltaLista = new AltaLista();
        MainPanel.add(frameAltaLista);
        MainPanel.repaint();
        frameAltaLista.setVisible(true);
    }//GEN-LAST:event_altaListaActionPerformed

    private void publicarListaMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_publicarListaMenuItemActionPerformed
        MainPanel.removeAll();
        PublicarLista framePublicarLista = new PublicarLista();
        MainPanel.add(framePublicarLista);
        MainPanel.repaint();
        framePublicarLista.setVisible(true);    }//GEN-LAST:event_publicarListaMenuItemActionPerformed

    private void consultaAlbumMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_consultaAlbumMenuItemActionPerformed
        MainPanel.removeAll();
        Object[] options = {"Artista","Genero"};
        int opcion = JOptionPane.showOptionDialog(this,
                "Desea consultar album por Artista o por Genero?",
                "Elija una opcion", JOptionPane.YES_NO_OPTION,
                JOptionPane.INFORMATION_MESSAGE,null,options,options[0]);
        if (opcion == JOptionPane.OK_OPTION) {
            ConsultaAlbumPorArtista consAlbArt = new ConsultaAlbumPorArtista();
            MainPanel.add(consAlbArt);
            MainPanel.repaint();
            consAlbArt.setVisible(true);
        } else {
            if (opcion == JOptionPane.NO_OPTION) {
                ConsultaAlbumPorGenero consAlbGen = new ConsultaAlbumPorGenero();
                MainPanel.add(consAlbGen);
                MainPanel.repaint();
                consAlbGen.setVisible(true);
            }
        }
    }//GEN-LAST:event_consultaAlbumMenuItemActionPerformed

    private void altaGeneroMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_altaGeneroMenuItemActionPerformed
        MainPanel.removeAll();
        AltaGenero frameAltaGenero = new AltaGenero();
        MainPanel.add(frameAltaGenero);
        MainPanel.repaint();
        frameAltaGenero.setVisible(true);
    }//GEN-LAST:event_altaGeneroMenuItemActionPerformed

    private void consultaListaMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_consultaListaMenuItemActionPerformed
        MainPanel.removeAll();
        Object[] options = {"Cliente","Genero"};
        int opcion = JOptionPane.showOptionDialog(this,
                "Desea consultar lista por Cliente o por Género?",
                "Elija una opción", JOptionPane.YES_NO_OPTION,
                JOptionPane.INFORMATION_MESSAGE,null,options,options[0]);
        if (opcion == JOptionPane.OK_OPTION) {
            ConsultaListaPorCliente consListaCli = new ConsultaListaPorCliente();
            MainPanel.add(consListaCli);
            MainPanel.repaint();
            consListaCli.setVisible(true);
        } else {
            if (opcion == JOptionPane.NO_OPTION) {
                ConsultaListaPorGenero consListaGen = new ConsultaListaPorGenero();
                MainPanel.add(consListaGen);
                MainPanel.repaint();
                consListaGen.setVisible(true);
            }
        }
    }//GEN-LAST:event_consultaListaMenuItemActionPerformed

    private void DatosDePrueba() throws Exception {
        //ALTA DE CLIENTES:
        IAltaPerfil ctrlAltaPerfil = Fabrica.getIAltaPerfil();
        File file;
        Image imag;
        BufferedImage img = null;
        URL url;
        FileInputStream in = null;
        Properties props = new Properties();
        in = new FileInputStream("espotify_properties");
        props.load(in);
        in.close();
        String rutaDatosPrueba = props.getProperty("rutaDatosPrueba", "/");
        in.close();
        
        file = new File("."+rutaDatosPrueba+"img/clientes/ElPadrino.png");
        img = ImageIO.read(file);
        Calendar cal = Calendar.getInstance();
        cal.set(1972, 2, 8);
        DataCliente dataCliente = new DataCliente("el_padrino", "Vito", "Corleone", "el_padrino@tuta.io", cal, img,"elpadrino");
        ctrlAltaPerfil.altaCliente(dataCliente);
        
        file = new File("."+rutaDatosPrueba+"img/clientes/ScarlettOHara.jpg");
        img = ImageIO.read(file);
        cal.set(1984, 10, 27);
        dataCliente = new DataCliente("scarlettO", "Scarlett", "O'Hara", "scarlettO@tuta.io", cal, img,"scarletto");
        ctrlAltaPerfil.altaCliente(dataCliente);
        
        file = new File("."+rutaDatosPrueba+"img/clientes/PepeArgento.png");
        img = ImageIO.read(file);
        cal.set(1955, 1, 14);
        dataCliente = new DataCliente("ppArgento", "Pepe", "Argento", "ppArgento@hotmail.com", cal, img,"ppargento");
        ctrlAltaPerfil.altaCliente(dataCliente);
        
        cal.set(1056, 2, 7);
        dataCliente = new DataCliente("Heisenberg", "Walter", "White", "Heisenberg@tuta.io", cal, null,"heisenberg");
        ctrlAltaPerfil.altaCliente(dataCliente);
        
        file = new File("."+rutaDatosPrueba+"img/clientes/BenKenobi.png");
        img = ImageIO.read(file);
        cal.set(1914, 3, 2);
        dataCliente = new DataCliente("benKenobi", "Obi-Wan", "Kenobi", "benKenobi@gmail.com", cal, img,"benkenobi");
        ctrlAltaPerfil.altaCliente(dataCliente);
        
        file = new File("."+rutaDatosPrueba+"img/clientes/lachiqui.jpg");
        img = ImageIO.read(file);
        cal.set(1927, 1, 23);
        dataCliente = new DataCliente("lachiqui", "Mirtha", "Legrand", "lachiqui@hotmail.com.ar", cal, img,"lachiqui");
        ctrlAltaPerfil.altaCliente(dataCliente);
        
        file = new File("."+rutaDatosPrueba+"img/clientes/CachoBochinche.jpg");
        img = ImageIO.read(file);
        cal.set(1937, 4, 8);
        dataCliente = new DataCliente("cbochinche", "Cacho", "Bochinche", "cbochinche@vera.com.uy", cal, img,"cbochinche");
        ctrlAltaPerfil.altaCliente(dataCliente);
        
        file = new File("."+rutaDatosPrueba+"img/clientes/eleven.jpg");
        img = ImageIO.read(file);
        cal.set(1971, 11, 31);
        dataCliente = new DataCliente("Eleven11", "Eleven", "o'clock", "Eleven11@gmail.com", cal, img,"eleven11");
        ctrlAltaPerfil.altaCliente(dataCliente);
        
        DataArtista dataArtista;      
        String bio;
        
        file = new File("."+rutaDatosPrueba+"img/artistas/VillagePeople.jpg");
        img = ImageIO.read(file);
        cal.set(1977, 0, 1);
        bio = "Village People es una innovadora formación musical de estilo disco de finales de los años 70. Fue famosa tanto por sus peculiares disfraces, como por sus canciones pegadizas, con letras sugerentes y llenas de dobles sentidos.";
        dataArtista = new DataArtista(bio, "www.officialvillagepeople.com", "vpeople", "Village", "People", "vpeople@tuta.io", cal, img,"vpeople");
        ctrlAltaPerfil.altaArtista(dataArtista);

        file = new File("."+rutaDatosPrueba+"img/artistas/DepecheMode.jpg");
        img = ImageIO.read(file);
        cal.set(1980, 5, 14);
        bio = "";
        dataArtista = new DataArtista(bio, "www.depechemode.com", "dmode", "Depeche", "Mode", "dmode@tuta.io", cal, img,"dmode");
        ctrlAltaPerfil.altaArtista(dataArtista);

        file = new File("."+rutaDatosPrueba+"img/artistas/CyndiLauper.jpg");
        img = ImageIO.read(file);
        cal.set(1953, 5, 22);
        bio = "Cynthia Ann Stephanie Lauper, conocida simplemente como Cyndi Lauper, es una cantautora, actriz y empresaria estadounidense. Después de participar en el grupo musical, Blue Angel, en 1983 firmó con Portrait Records (filial de Epic Records) y lanzó su exitoso álbum debut She's So Unusual a finales de ese mismo año. Siguió lanzando una serie de álbumes en los que encontró una inmensa popularidad, superando los límites de contenido de las letras de sus canciones.";
        dataArtista = new DataArtista(bio, "cyndilauper.com", "clauper", "Cyndi", "Lauper", "clauper@hotmail.com", cal, img,"clauper");
        ctrlAltaPerfil.altaArtista(dataArtista);

        file = new File("."+rutaDatosPrueba+"img/artistas/BruceTheBoss.jpg");
        img = ImageIO.read(file);
        cal.set(1949, 8, 23);
        bio = "";
        dataArtista = new DataArtista(bio, "brucespringsteen.net", "bruceTheBoss", "Bruce", "Springsteen", "bruceTheBoss@gmail.com", cal, img,"bruceTheBoss");
        ctrlAltaPerfil.altaArtista(dataArtista);

        file = new File("."+rutaDatosPrueba+"img/artistas/LaTripleNelson.jpg");
        img = ImageIO.read(file);
        cal.set(1998, 0, 1);
        bio = "La Triple Nelson es un grupo de rock uruguayo formado en enero de 1998 e integrado inicialmente por Christian Cary (guitarra y voz), Fernando Paco"
            +" Pintos (bajo y coros) y Rubén Otonello (actualmente su nuevo baterista es Rafael Ugo).";
        dataArtista = new DataArtista(bio, "", "tripleNelson", "La Triple", "Nelson", "tripleNelson@tuta.io", cal, img,"tripleNelson");
        ctrlAltaPerfil.altaArtista(dataArtista);

        cal.set(1987, 1, 14);
        bio = "";
        dataArtista = new DataArtista(bio, "", "la_ley", "La", "Ley", "la_ley@tuta.io", cal, null,"la_ley");
        ctrlAltaPerfil.altaArtista(dataArtista);

        cal.set(1940, 5, 7);
        bio = "Sir Thomas John, conocido por su nombre artístico de Tom Jones, es un cantante británico. Ha vendido más de 100 millones de discos en todo el mundo.";
        dataArtista = new DataArtista(bio, "", "tigerOfWales", "Tom", "Jones", "tigerOfWales@tuta.io", cal, null,"tiger");
        ctrlAltaPerfil.altaArtista(dataArtista);

        cal.set(1840, 3, 25);
        bio = "Piotr Ilich Chaikovski fue un compositor ruso del período del Romanticismo";
        dataArtista = new DataArtista(bio, "", "chaiko", "Piotr", "Tchaikovsky", "chaiko@tuta.io", cal, null,"chaiko");
        ctrlAltaPerfil.altaArtista(dataArtista);

        file = new File("."+rutaDatosPrueba+"img/artistas/NicoleNeumann.jpg");
        img = ImageIO.read(file);
        cal.set(1980, 9, 31);
        bio = "";
        dataArtista = new DataArtista(bio, "", "nicoleneu", "Nicole", "Neumann", "nicoleneu@hotmail.com", cal, img,"nicoleneu");
        ctrlAltaPerfil.altaArtista(dataArtista);

        file = new File("."+rutaDatosPrueba+"img/artistas/Pimpinela.jpg");
        img = ImageIO.read(file);
        cal.set(1981, 7, 13);
        bio = "";
        dataArtista = new DataArtista(bio, "www.pimpinela.net", "lospimpi", "Pimpinela", "pega la vuelta", "lospimpi@gmail.com", cal, img,"lospimpi");
        ctrlAltaPerfil.altaArtista(dataArtista);

        cal.set(1940, 2, 5);
        bio = "José Gómez Romero, conocido artísticamente como Dyango es un cantante español de música romántica.";
        dataArtista = new DataArtista(bio, "", "dyangounchained", "Dyango", "Unchained", "dyangounchained@gmail.com", cal, null,"dyango");
        ctrlAltaPerfil.altaArtista(dataArtista);

        cal.set(1952, 6, 17);
        bio = "Su carrera comienza en 1976 cuando forma la banda Los Playeros junto a su hermano Víctor. Al poco tiempo se mudan a San Luis donde comienzan a hacerse conocidos en la escena musical. Su éxito a nivel nacional llega a comienzos de los años 1990 cuando desembarca en Buenos Aires y graba el éxito Violeta"
            + ", originalmente compuesta e nterpretada en 1985 por el músico brasileño Luiz Caldas bajo el título «Fricote».";
        dataArtista = new DataArtista(bio, "", "alcides", "Alcides", "Palacio", "alcides@tuta.io", cal, null,"alcides");
        ctrlAltaPerfil.altaArtista(dataArtista);
            
        //SUSCRIPCIONES
        Calendar creacion = Calendar.getInstance();
        Calendar update = (Calendar) creacion.clone();
        Calendar desde = (Calendar) creacion.clone();
        
        update.set(2016,8,2);
        creacion.set(2016, 7, 26);
        desde.set(2016, 7, 26);
        espotify.Suscripcion s1 = new espotify.Suscripcion(creacion, update, desde, TipoSuscripcion.SEMANAL, false);

        Calendar creacion2 = (Calendar) creacion.clone();
        Calendar update2 = (Calendar) creacion.clone();
        Calendar desde2 = (Calendar) creacion.clone();
        
        update2.set(2016,8,3);
        creacion2.set(2016,8,3);
        desde2.set(2016,8,3);
        espotify.Suscripcion s2 = new espotify.Suscripcion(creacion2, update2, desde2, TipoSuscripcion.ANUAL, false);
        
        Calendar creacion3 = (Calendar) creacion.clone();
        Calendar update3 = (Calendar) creacion.clone();
        
        update3.set(2016,9,1);
        creacion3.set(2016,9,1);
        espotify.Suscripcion s3 = new espotify.Suscripcion(creacion3, update3, null, TipoSuscripcion.MENSUAL, false);
        
        Calendar creacion4 = (Calendar) creacion.clone();
        Calendar update4 = (Calendar) creacion.clone();
        Calendar desde4 = (Calendar) creacion.clone();
        
        update4.set(2016,2,1);
        creacion4.set(2015, 1, 28);
        desde4.set(2015, 1, 28);
        espotify.Suscripcion s4 = new espotify.Suscripcion(creacion4, update4, desde4, TipoSuscripcion.ANUAL, false);
        
        Calendar creacion5 = (Calendar) creacion.clone();
        Calendar update5 = (Calendar) creacion.clone();
        Calendar desde5 = (Calendar) creacion.clone();
        
        update5.set(2016,4,3);
        creacion5.set(2016, 4, 2);
        desde5.set(2016, 4, 2);
        espotify.Suscripcion s5 = new espotify.Suscripcion(creacion5, update5, desde5, TipoSuscripcion.MENSUAL,true);
        
        Calendar creacion6 = (Calendar) creacion.clone();
        Calendar update6 = (Calendar) creacion.clone();
        Calendar desde6 = (Calendar) creacion.clone();
        
        update6.set(2016,9,16);
        creacion6.set(2016,9,16);
        desde6.set(2016,9,16);
        espotify.Suscripcion s6 = new espotify.Suscripcion(creacion6, update6, desde6, TipoSuscripcion.SEMANAL, false);
        
        Calendar creacion7 = (Calendar) creacion.clone();
        Calendar update7 = (Calendar) creacion.clone();
        Calendar desde7 = (Calendar) creacion.clone();
        
        update7.set(2015,5,10);
        creacion7.set(2015, 5, 9);
        desde7.set(2015, 5, 9);
        espotify.Suscripcion s7 = new espotify.Suscripcion(creacion7, update7, desde7, TipoSuscripcion.ANUAL, false);
        
        Calendar creacion8 = (Calendar) creacion.clone();
        Calendar update8 = (Calendar) creacion.clone();
        
        update8.set(2016,9,15);
        creacion8.set(2016,9,15);
        espotify.Suscripcion s8 = new espotify.Suscripcion(creacion8, update8, null, TipoSuscripcion.MENSUAL, false);
        
        Calendar creacion9 = (Calendar) creacion.clone();
        Calendar update9 = (Calendar) creacion.clone();
        Calendar desde9 = (Calendar) creacion.clone();
        
        update9.set(2016,8,2);
        creacion9.set(2016, 8, 1);
        desde9.set(2016, 8, 1);
        espotify.Suscripcion s9 = new espotify.Suscripcion(creacion9, update9, desde9, TipoSuscripcion.ANUAL, true);
        
        Calendar creacion10 = (Calendar) creacion.clone();
        Calendar update10 = (Calendar) creacion.clone();
        Calendar desde10 = (Calendar) creacion.clone();
        
        update10.set(2016,8,25);
        creacion10.set(2016,8,25);
        desde10.set(2016,8,25);
        espotify.Suscripcion s10 = new espotify.Suscripcion(creacion10, update10, desde10, TipoSuscripcion.MENSUAL, false);
        
        Calendar creacion11 = (Calendar) creacion.clone();
        Calendar update11 = (Calendar) creacion.clone();
        Calendar desde11 = (Calendar) creacion.clone();
        
        update11.set(2016,4,1);
        creacion11.set(2016, 3, 23);
        desde11.set(2016, 3, 23);
        espotify.Suscripcion s11 = new espotify.Suscripcion(creacion11, update11, desde11, TipoSuscripcion.SEMANAL, false);
       
        Calendar creacion12 = (Calendar) creacion.clone();
        Calendar update12 = (Calendar) creacion.clone();
        Calendar desde12 = (Calendar) creacion.clone();
        
        update12.set(2016,9,2);
        creacion12.set(2016, 8, 25);
        desde12.set(2016, 8, 25);
        espotify.Suscripcion s12 = new espotify.Suscripcion(creacion12, update12, desde12, TipoSuscripcion.ANUAL, true);
        
        Calendar creacion13 = (Calendar) creacion.clone();
        Calendar update13 = (Calendar) creacion.clone();
       
        update13.set(2016,9,15);
        creacion13.set(2016,9,15);
        espotify.Suscripcion s13 = new espotify.Suscripcion(creacion13, update13, null, TipoSuscripcion.ANUAL, false);
        
        IActualizarSuscripcion isuscripcion = Fabrica.getIActualizarSuscripcion();
        
        isuscripcion.encajarSuscripcion("el_padrino", s1);
        isuscripcion.encajarSuscripcion("el_padrino", s2);
        isuscripcion.encajarSuscripcion("scarlettO", s3);
        isuscripcion.encajarSuscripcion("ppArgento", s4);
        isuscripcion.encajarSuscripcion("ppArgento", s5);
        isuscripcion.encajarSuscripcion("ppArgento", s6);
        isuscripcion.encajarSuscripcion("Heisenberg", s7);
        isuscripcion.encajarSuscripcion("benKenobi", s8);
        isuscripcion.encajarSuscripcion("lachiqui", s9);
        isuscripcion.encajarSuscripcion("lachiqui", s10);
        isuscripcion.encajarSuscripcion("cbochinche", s11);
        isuscripcion.encajarSuscripcion("cbochinche", s12);
        isuscripcion.encajarSuscripcion("Eleven11", s13);
        
        //ALTA DE SEGUIDORES
        IAltaSeguir ctrlSeguir = Fabrica.getIAltaSeguir();
        ctrlSeguir.altaSeguir("el_padrino", "vpeople");
        ctrlSeguir.altaSeguir("el_padrino", "dmode");
        ctrlSeguir.altaSeguir("el_padrino", "clauper");
        ctrlSeguir.altaSeguir("el_padrino", "benKenobi");
        ctrlSeguir.altaSeguir("el_padrino", "lachiqui");
        ctrlSeguir.altaSeguir("el_padrino", "cbochinche");
        ctrlSeguir.altaSeguir("el_padrino", "Eleven11");
        ctrlSeguir.altaSeguir("scarlettO", "dmode");
        ctrlSeguir.altaSeguir("scarlettO", "bruceTheBoss");
        ctrlSeguir.altaSeguir("scarlettO", "tripleNelson");
        ctrlSeguir.altaSeguir("scarlettO", "tigerOfWales");
        ctrlSeguir.altaSeguir("scarlettO", "Heisenberg");
        ctrlSeguir.altaSeguir("scarlettO", "lachiqui");
        ctrlSeguir.altaSeguir("scarlettO", "benKenobi");
        ctrlSeguir.altaSeguir("ppArgento", "dmode");
        ctrlSeguir.altaSeguir("ppArgento", "bruceTheBoss");
        ctrlSeguir.altaSeguir("ppArgento", "tripleNelson");
        ctrlSeguir.altaSeguir("ppArgento", "benKenobi");
        ctrlSeguir.altaSeguir("ppArgento", "lachiqui");
        ctrlSeguir.altaSeguir("ppArgento", "cbochinche");
        ctrlSeguir.altaSeguir("ppArgento", "Eleven11");
        ctrlSeguir.altaSeguir("Heisenberg", "dmode");
        ctrlSeguir.altaSeguir("Heisenberg", "bruceTheBoss");
        ctrlSeguir.altaSeguir("Heisenberg", "tigerOfWales");
        ctrlSeguir.altaSeguir("Heisenberg", "tripleNelson");
        ctrlSeguir.altaSeguir("Heisenberg", "lospimpi");
        ctrlSeguir.altaSeguir("Heisenberg", "dyangounchained");
        ctrlSeguir.altaSeguir("Heisenberg", "alcides");
        ctrlSeguir.altaSeguir("Heisenberg", "el_padrino");
        ctrlSeguir.altaSeguir("Heisenberg", "scarlettO");
        ctrlSeguir.altaSeguir("Heisenberg", "ppArgento");
        ctrlSeguir.altaSeguir("Heisenberg", "benKenobi");
        ctrlSeguir.altaSeguir("Heisenberg", "lachiqui");
        ctrlSeguir.altaSeguir("Heisenberg", "Eleven11");
        ctrlSeguir.altaSeguir("benKenobi", "dmode");
        ctrlSeguir.altaSeguir("benKenobi", "bruceTheBoss");
        ctrlSeguir.altaSeguir("benKenobi", "la_ley");
        ctrlSeguir.altaSeguir("benKenobi", "chaiko");
        ctrlSeguir.altaSeguir("benKenobi", "nicoleneu");
        ctrlSeguir.altaSeguir("benKenobi", "lospimpi");
        ctrlSeguir.altaSeguir("benKenobi", "alcides");
        ctrlSeguir.altaSeguir("benKenobi", "el_padrino");
        ctrlSeguir.altaSeguir("benKenobi", "ppArgento");
        ctrlSeguir.altaSeguir("benKenobi", "lachiqui");
        ctrlSeguir.altaSeguir("benKenobi", "cbochinche");
        ctrlSeguir.altaSeguir("benKenobi", "Eleven11");
        ctrlSeguir.altaSeguir("lachiqui", "bruceTheBoss");
        ctrlSeguir.altaSeguir("lachiqui", "la_ley");
        ctrlSeguir.altaSeguir("lachiqui", "lospimpi");
        ctrlSeguir.altaSeguir("lachiqui", "alcides");
        ctrlSeguir.altaSeguir("lachiqui", "el_padrino");
        ctrlSeguir.altaSeguir("lachiqui", "scarlettO");
        ctrlSeguir.altaSeguir("lachiqui", "ppArgento");
        ctrlSeguir.altaSeguir("cbochinche", "la_ley");
        ctrlSeguir.altaSeguir("cbochinche", "lospimpi");
        ctrlSeguir.altaSeguir("cbochinche", "alcides");
        ctrlSeguir.altaSeguir("cbochinche", "dyangounchained");
        ctrlSeguir.altaSeguir("cbochinche", "ppArgento");
        ctrlSeguir.altaSeguir("Eleven11", "la_ley");
        ctrlSeguir.altaSeguir("Eleven11", "el_padrino");
        ctrlSeguir.altaSeguir("Eleven11", "scarlettO");
        ctrlSeguir.altaSeguir("Eleven11", "ppArgento");
        
        
        //ALTA DE GENEROS
        IAltaGenero ctrlAltaGenero = Fabrica.getIAltaGenero();
        DataGenero dataGenero = new DataGenero("Rock", "");
        ctrlAltaGenero.altaGenero(dataGenero);
        dataGenero = new DataGenero("Rock Clásico", "Rock");
        ctrlAltaGenero.altaGenero(dataGenero);
        dataGenero = new DataGenero("Rock Latino", "Rock");
        ctrlAltaGenero.altaGenero(dataGenero);
        dataGenero = new DataGenero("Rock & Roll", "Rock");
        ctrlAltaGenero.altaGenero(dataGenero);
        dataGenero = new DataGenero("Clásica", "");
        ctrlAltaGenero.altaGenero(dataGenero);
        dataGenero = new DataGenero("Disco", "");
        ctrlAltaGenero.altaGenero(dataGenero);
        dataGenero = new DataGenero("Pop", "");
        ctrlAltaGenero.altaGenero(dataGenero);
        dataGenero = new DataGenero("Electropop", "Pop");
        ctrlAltaGenero.altaGenero(dataGenero);
        dataGenero = new DataGenero("Dance-pop", "Pop");
        ctrlAltaGenero.altaGenero(dataGenero);
        dataGenero = new DataGenero("Pop Clásico", "Pop");
        ctrlAltaGenero.altaGenero(dataGenero);
        dataGenero = new DataGenero("Balada", "");
        ctrlAltaGenero.altaGenero(dataGenero);
        dataGenero = new DataGenero("Cumbia", "");
        ctrlAltaGenero.altaGenero(dataGenero);
        
        String nickArtista;
        String nombreAlbum;
        ArrayList<DataTema> temas;
        ArrayList<String> generos;
        DataAlbumExt dataAlbumExt;
        IAltaAlbum iAltaAlbum = Fabrica.getIAltaAlbum();
        IObtenerAudio ioa = Fabrica.getIObtenerAudio();
        File tema;
        InputStream input;
        BufferedInputStream buf;
        
        nickArtista = "vpeople";
        nombreAlbum = "Village People Live and Sleazy";
        generos = new ArrayList<>();
        generos.add("Disco");
        generos.add("Dance-pop");
        generos.add("Pop Clásico");

        temas = new ArrayList<>();
        temas.add(new DataTemaWeb("bit.ly/SCvpymca", "YMCA", 268, 1, nickArtista, nombreAlbum));
        tema = new File("."+rutaDatosPrueba+"mp3/MachoMan.mp3");
        buf = new BufferedInputStream(new FileInputStream(tema));
        temas.add(new DataTemaArchivo(buf, "Macho Man", 208, 2, nickArtista, nombreAlbum));
        temas.add(new DataTemaWeb("bit.ly/SCvpinthenavy", "In the Navy", 193, 3, nickArtista, nombreAlbum));
               
        
        dataAlbumExt = new DataAlbumExt(temas, "Village People Live and Sleazy", 1980, generos, null, nickArtista);
        iAltaAlbum.altaAlbum(dataAlbumExt);
        for(int g = 0; g < 10; g++) {
            ioa.registrarEscucha(nickArtista, nombreAlbum, "YMCA");
        }
        ioa.registrarDescarga(nickArtista, nombreAlbum, "Macho Man");
        ioa.registrarEscucha(nickArtista, nombreAlbum, "In the Navy");
        
        
        nickArtista = "dmode";
        nombreAlbum = "Violator";
        generos = new ArrayList<>();
        generos.add("Electropop");
        temas = new ArrayList<>();
        tema = new File("."+rutaDatosPrueba+"mp3/PersonalJesus.mp3");
        buf = new BufferedInputStream(new FileInputStream(tema));
        temas.add(new DataTemaArchivo(buf, "Personal Jesus", 296, 1, nickArtista, nombreAlbum));
        tema = new File("."+rutaDatosPrueba+"mp3/Enjoy The Silence.mp3");
        buf = new BufferedInputStream(new FileInputStream(tema));
        temas.add(new DataTemaArchivo(buf, "Enjoy The Silence", 261, 2, nickArtista, nombreAlbum));

        dataAlbumExt = new DataAlbumExt(temas, "Violator", 1990, generos, null, nickArtista);
        iAltaAlbum.altaAlbum(dataAlbumExt);
        ioa.registrarDescarga(nickArtista, nombreAlbum, "Personal Jesus");
        for(int g = 0; g < 3; g++) {
            ioa.registrarEscucha(nickArtista, nombreAlbum, "Personal Jesus");
        }
        ioa.registrarDescarga(nickArtista, nombreAlbum, "Enjoy The Silence");
        ioa.registrarEscucha(nickArtista, nombreAlbum, "Enjoy The Silence");
        
        nickArtista = "clauper";
        nombreAlbum = "She's So Unusual";
        generos = new ArrayList<>();
        generos.add("Pop Clásico");
        generos.add("Dance-pop");
        temas = new ArrayList<>();
        temas.add(new DataTemaWeb("bit.ly/SCclgirlsjustwant", "Girls Just Want To Have Fun", 195, 1, nickArtista, nombreAlbum));
        tema = new File("."+rutaDatosPrueba+"mp3/TimeAfterTime.mp3");
        buf = new BufferedInputStream(new FileInputStream(tema));
        temas.add(new DataTemaArchivo(buf, "Time After Time", 312, 2, nickArtista, nombreAlbum));
        file = new File("."+rutaDatosPrueba+"img/albums/ShesSoUnusual.PNG");
        img = ImageIO.read(file);

        dataAlbumExt = new DataAlbumExt(temas, "She's So Unusual", 1983, generos, img, nickArtista);
        iAltaAlbum.altaAlbum(dataAlbumExt);
        ioa.registrarEscucha(nickArtista, nombreAlbum, "Girls Just Want To Have Fun");
        ioa.registrarDescarga(nickArtista, nombreAlbum, "Time After Time");
        ioa.registrarDescarga(nickArtista, nombreAlbum, "Time After Time");
        

        nickArtista = "bruceTheBoss";
        nombreAlbum = "Born In The U.S.A.";
        generos = new ArrayList<>();
        generos.add("Rock Clásico");
        generos.add("Rock & Roll");
        generos.add("Pop Clásico");
        temas = new ArrayList<>();
        temas.add(new DataTemaWeb("bit.ly/SCbsborninusa", "Born In The U.S.A.", 298, 1, nickArtista, nombreAlbum));
        temas.add(new DataTemaWeb("bit.ly/SCbsglorydays", "Glory Days", 323, 2, nickArtista, nombreAlbum));
        tema = new File("."+rutaDatosPrueba+"mp3/DancingInTheDark.mp3");
        buf = new BufferedInputStream(new FileInputStream(tema));
        temas.add(new DataTemaArchivo(buf, "Dancing In The Park", 238, 3, nickArtista, nombreAlbum));

        dataAlbumExt = new DataAlbumExt(temas, "Born In The U.S.A.", 1984, generos, null, nickArtista);
        iAltaAlbum.altaAlbum(dataAlbumExt);
        for(int g = 0; g < 5; g++) {
            ioa.registrarEscucha(nickArtista, nombreAlbum, "Born In The U.S.A.");
        }
        for(int g = 0; g < 7; g++) {
            ioa.registrarEscucha(nickArtista, nombreAlbum, "Glory Days");
        }
        ioa.registrarEscucha(nickArtista, nombreAlbum, "Dancing In The Park");
        ioa.registrarDescarga(nickArtista, nombreAlbum, "Dancing In The Park");
        

        nickArtista = "tigerOfWales";
        nombreAlbum = "It's Not Unusual";
        generos = new ArrayList<>();
        generos.add("Rock Clásico");
        generos.add("Pop Clásico");
        temas = new ArrayList<>();
        tema = new File("."+rutaDatosPrueba+"mp3/ItSNotUnusual.mp3");
        buf = new BufferedInputStream(new FileInputStream(tema));
        temas.add(new DataTemaArchivo(buf, "It’s Not Unusual", 120, 1, nickArtista, nombreAlbum));
        file = new File("."+rutaDatosPrueba+"img/albums/ItsNotUnusual.jpeg");
        img = ImageIO.read(file);

        dataAlbumExt = new DataAlbumExt(temas, "It's Not Unusual", 1965, generos, img, nickArtista);
        iAltaAlbum.altaAlbum(dataAlbumExt);
        ioa.registrarDescarga(nickArtista, nombreAlbum, "It’s Not Unusual");
        ioa.registrarEscucha(nickArtista, nombreAlbum, "It’s Not Unusual");
        ioa.registrarEscucha(nickArtista, nombreAlbum, "It’s Not Unusual");

        nickArtista = "tripleNelson";
        nombreAlbum = "Agua Y Sal";
        generos = new ArrayList<>();
        generos.add("Rock Latino");
        temas = new ArrayList<>();
        temas.add(new DataTemaWeb("bit.ly/SCtnadagiopais", "Adagio De Mi País", 290, 1, nickArtista, nombreAlbum));

        dataAlbumExt = new DataAlbumExt(temas, "Agua Y Sal", 2012, generos, null, nickArtista);
        iAltaAlbum.altaAlbum(dataAlbumExt);
        for(int g = 0; g < 5; g++) {
            ioa.registrarEscucha(nickArtista, nombreAlbum, "Adagio De Mi País");
        }
        

        nickArtista = "la_ley";
        nombreAlbum = "MTV Unplugged";
        generos = new ArrayList<>();
        generos.add("Rock Latino");
        generos.add("Pop Clásico");
        temas = new ArrayList<>();
        tema = new File("."+rutaDatosPrueba+"mp3/ElDuelo.mp3");
        buf = new BufferedInputStream(new FileInputStream(tema));
        temas.add(new DataTemaArchivo(buf, "El Duelo", 323, 1, nickArtista, nombreAlbum));
        tema = new File("."+rutaDatosPrueba+"mp3/Mentira.mp3");
        buf = new BufferedInputStream(new FileInputStream(tema));
        temas.add(new DataTemaArchivo(buf, "Mentira", 288, 2, nickArtista, nombreAlbum));
        file = new File("."+rutaDatosPrueba+"img/albums/mtvUnplugged.jpg");
        img = ImageIO.read(file);

        dataAlbumExt = new DataAlbumExt(temas, "MTV Unplugged", 2001, generos, img, nickArtista);
        iAltaAlbum.altaAlbum(dataAlbumExt);
        for(int g = 0; g < 3; g++) {
            ioa.registrarDescarga(nickArtista, nombreAlbum, "El Duelo");
        }
        ioa.registrarEscucha(nickArtista, nombreAlbum, "El Duelo");
        ioa.registrarEscucha(nickArtista, nombreAlbum, "Mentira");
        ioa.registrarDescarga(nickArtista, nombreAlbum, "Mentira");

        nickArtista = "chaiko";
        nombreAlbum = "El Lago De Los Cisnes";
        generos = new ArrayList<>();
        generos.add("Clásica");
        temas = new ArrayList<>();
        temas.add(new DataTemaWeb("bit.ly/SCptswanlake", "Acto 2, Número 10, Escena (Moderato)", 160, 1, nickArtista, nombreAlbum));

        dataAlbumExt = new DataAlbumExt(temas, "El Lago De Los Cisnes", 1875, generos, null, nickArtista);
        iAltaAlbum.altaAlbum(dataAlbumExt);
        for(int g = 0; g < 3; g++) {
            ioa.registrarEscucha(nickArtista, nombreAlbum, "Acto 2, Número 10, Escena (Moderato)");
        }
        

        nickArtista = "chaiko";
        nombreAlbum = "Concierto Para Piano No. 1 En Si Menor, Opus 23";
        generos = new ArrayList<>();
        generos.add("Clásica");
        temas = new ArrayList<>();
        temas.add(new DataTemaWeb("bit.ly/SCptpiano", "Primer Movimiento (Allegro non troppo e molto maestoso – Allegro con spirito)", 1318, 1, nickArtista, nombreAlbum));

        dataAlbumExt = new DataAlbumExt(temas, "Concierto Para Piano No. 1 En Si Menor, Opus 23", 1875, generos, null, nickArtista);
        iAltaAlbum.altaAlbum(dataAlbumExt);
        for(int g = 0; g < 6; g++) {
            ioa.registrarEscucha(nickArtista, nombreAlbum, "Primer Movimiento (Allegro non troppo e molto maestoso – Allegro con spirito)");
        }
        

        nickArtista = "nicoleneu";
        nombreAlbum = "Primer Amor";
        generos = new ArrayList<>();
        generos.add("Electropop");
        temas = new ArrayList<>();
        tema = new File("."+rutaDatosPrueba+"mp3/NoQuieroEstudiar.mp3");
        buf = new BufferedInputStream(new FileInputStream(tema));
        temas.add(new DataTemaArchivo(buf, "No Quiero Estudiar", 132, 1, nickArtista, nombreAlbum));

        dataAlbumExt = new DataAlbumExt(temas, "Primer Amor", 1994, generos, null, nickArtista);
        iAltaAlbum.altaAlbum(dataAlbumExt);
        ioa.registrarEscucha(nickArtista, nombreAlbum, "No Quiero Estudiar");
        

        nickArtista = "lospimpi";
        nombreAlbum = "Hay Amores Que Matan";
        generos = new ArrayList<>();
        generos.add("Pop Clásico");
        generos.add("Balada");
        temas = new ArrayList<>();
        tema = new File("."+rutaDatosPrueba+"mp3/PorEseHombre.mp3");
        buf = new BufferedInputStream(new FileInputStream(tema));
        temas.add(new DataTemaArchivo(buf, "Por Ese Hombre", 285, 1, nickArtista, nombreAlbum));

        dataAlbumExt = new DataAlbumExt(temas, "Hay Amores Que Matan", 1993, generos, null, nickArtista);
        iAltaAlbum.altaAlbum(dataAlbumExt);
        ioa.registrarEscucha(nickArtista, nombreAlbum, "Por Ese Hombre");
        ioa.registrarDescarga(nickArtista, nombreAlbum, "Por Ese Hombre");

        nickArtista = "dyangounchained";
        nombreAlbum = "Un Loco Como Yo";
        generos = new ArrayList<>();
        generos.add("Pop Clásico");
        generos.add("Balada");
        temas = new ArrayList<>();
        temas.add(new DataTemaWeb("bit.ly/SCdyporesehombre", "Por Ese Hombre", 313, 1, nickArtista, nombreAlbum));

        dataAlbumExt = new DataAlbumExt(temas, "Un Loco Como Yo", 1993, generos, null, nickArtista);
        iAltaAlbum.altaAlbum(dataAlbumExt);
        for(int g = 0; g < 3; g++) {
            ioa.registrarEscucha(nickArtista, nombreAlbum, "Por Ese Hombre");
        }

        nickArtista = "alcides";
        nombreAlbum = "20 Grandes Éxitos";
        generos = new ArrayList<>();
        generos.add("Cumbia");
        temas = new ArrayList<>();
        temas.add(new DataTemaWeb("bit.ly/SCvioleta", "Violeta", 116, 1, nickArtista, nombreAlbum));
        file = new File("."+rutaDatosPrueba+"img/albums/alcides20.jpg");
        img = ImageIO.read(file);

        dataAlbumExt = new DataAlbumExt(temas, "20 Grandes Éxitos", 1989, generos, img, nickArtista);
        iAltaAlbum.altaAlbum(dataAlbumExt);
        ioa.registrarEscucha(nickArtista, nombreAlbum, "Violeta");
        
        
        //ALTA DE LISTAS
        //DEFECTO
        IAltaLista ctrlAltaListas = Fabrica.getIAltaLista();

        DataDefecto dataDefecto = new DataDefecto("Pop Clásico", "Noche De La Nostalgia", null);
        ctrlAltaListas.altaListaDefecto(dataDefecto);
        dataDefecto = new DataDefecto("Rock Latino", "Rock En Español", null);
        ctrlAltaListas.altaListaDefecto(dataDefecto);
        dataDefecto = new DataDefecto("Clásica", "Música Clásica", null);
        ctrlAltaListas.altaListaDefecto(dataDefecto);
        
        //PARTICULARES
        
        DataParticular dataParticular = new DataParticular("el_padrino", "Música Inspiradora", null);
        ctrlAltaListas.altaListaParticular(dataParticular);
        dataParticular = new DataParticular("scarlettO", "De Todo Un Poco", null);
        ctrlAltaListas.altaListaParticular(dataParticular);
        dataParticular = new DataParticular("Heisenberg", "Para Cocinar", null);
        ctrlAltaListas.altaListaParticular(dataParticular);
        dataParticular = new DataParticular("lachiqui", "Para Las Chicas", null);
        ctrlAltaListas.altaListaParticular(dataParticular);
        dataParticular = new DataParticular("cbochinche", "Fiesteras", null);
        ctrlAltaListas.altaListaParticular(dataParticular);
        dataParticular = new DataParticular("cbochinche", "Mis Favoritas", null);
        ctrlAltaListas.altaListaParticular(dataParticular);
        
        //PUBLICAR LISTAS
        IPublicarLista ctrlPublicar = Fabrica.getIPublicarLista();
        ctrlPublicar.publicarLista("Música Inspiradora","el_padrino");
        ctrlPublicar.publicarLista("De Todo Un Poco", "scarlettO");
        ctrlPublicar.publicarLista("Para Las Chicas", "lachiqui");
        ctrlPublicar.publicarLista("Fiesteras", "cbochinche");
        
        IFavoritear ifav = Fabrica.getIFavoritear();
        ifav.favoritear("el_padrino", new DataDefecto("","Noche De La Nostalgia", null));
        ifav.favoritear("el_padrino", new DataDefecto("","Música Clásica", null));
        ifav.favoritear("scarlettO", new DataDefecto("","Música Clásica", null));
        ifav.favoritear("ppArgento", new DataDefecto("","Noche De La Nostalgia", null));
        ifav.favoritear("ppArgento", new DataDefecto("","Rock En Español", null));
        ifav.favoritear("Heisenberg", new DataParticular("el_padrino","Música Inspiradora",null));
        ifav.favoritear("cbochinche", new DataDefecto("","Noche De La Nostalgia", null));
        ifav.favoritear("cbochinche", new DataDefecto("","Rock En Español", null));
        ifav.favoritear("el_padrino", new DataAlbum("Violator", 0, null, null, "dmode"));
        ifav.favoritear("el_padrino", new DataAlbum("El Lago De Los Cisnes", 0, null, null, "chaiko"));
        ifav.favoritear("el_padrino", new DataAlbum("Concierto Para Piano No. 1 En Si Menor, Opus 23", 0, null, null, "chaiko"));
        ifav.favoritear("benKenobi", new DataAlbum("El Lago De Los Cisnes", 0, null, null, "chaiko"));
        ifav.favoritear("benKenobi", new DataAlbum("Concierto Para Piano No. 1 En Si Menor, Opus 23", 0, null, null, "chaiko"));
        ifav.favoritear("cbochinche", new DataAlbum("Hay Amores Que Matan", 0, null, null, "lospimpi"));
        ifav.favoritear("el_padrino", new DataTema("El Duelo", 0, 0, "la_ley","MTV Unplugged"));
        ifav.favoritear("ppArgento", new DataTema("Adagio De Mi País", 0, 0, "tripleNelson","Agua Y Sal"));
        ifav.favoritear("cbochinche", new DataTema("Primer Movimiento (Allegro non troppo e molto maestoso – Allegro con spirito)", 0, 0, "chaiko","Concierto Para Piano No. 1 En Si Menor, Opus 23"));
        ifav.favoritear("Eleven11", new DataTema("No Quiero Estudiar", 0, 0, "nicoleneu","Primer Amor"));

        IAgregarTemaLista iadd = Fabrica.getIAgregarTemaLista();
        iadd.agregarTemaLista(new DataTema("YMCA", 0, 0, "vpeople","Village People Live and Sleazy"), "Noche De La Nostalgia");
        iadd.agregarTemaLista(new DataTema("Macho Man", 0, 0, "vpeople","Village People Live and Sleazy"), "Noche De La Nostalgia");
        iadd.agregarTemaLista(new DataTema("In the Navy", 0, 0, "vpeople","Village People Live and Sleazy"), "Noche De La Nostalgia");
        iadd.agregarTemaLista(new DataTema("Girls Just Want To Have Fun", 0, 0, "clauper","She's So Unusual"), "Noche De La Nostalgia");
        iadd.agregarTemaLista(new DataTema("Time After Time", 0, 0, "clauper","She\'s So Unusual"), "Noche De La Nostalgia");
        iadd.agregarTemaLista(new DataTema("Born In The U.S.A.", 0, 0, "bruceTheBoss","Born In The U.S.A."), "Noche De La Nostalgia");
        iadd.agregarTemaLista(new DataTema("Dancing In The Park", 0, 0, "bruceTheBoss","Born In The U.S.A."), "Noche De La Nostalgia");
        iadd.agregarTemaLista(new DataTema("Glory Days", 0, 0, "bruceTheBoss","Born In The U.S.A."), "Noche De La Nostalgia");
        iadd.agregarTemaLista(new DataTema("It’s Not Unusual", 0, 0, "tigerOfWales","It's Not Unusual"), "Noche De La Nostalgia");
        iadd.agregarTemaLista(new DataTema("Adagio De Mi País", 0, 0, "tripleNelson","Agua Y Sal"), "Rock En Español");
        iadd.agregarTemaLista(new DataTema("El Duelo", 0, 0, "la_ley","MTV Unplugged"), "Rock En Español");
        iadd.agregarTemaLista(new DataTema("Mentira", 0, 0, "la_ley","MTV Unplugged"), "Rock En Español");
        iadd.agregarTemaLista(new DataTema("Acto 2, Número 10, Escena (Moderato)", 0, 0, "chaiko","El Lago De Los Cisnes"), "Música Clásica");
        iadd.agregarTemaLista(new DataTema("Primer Movimiento (Allegro non troppo e molto maestoso – Allegro con spirito)", 0, 0, "chaiko","Concierto Para Piano No. 1 En Si Menor, Opus 23"), "Música Clásica");
        iadd.listarListasDeCliente("el_padrino");
        iadd.agregarTemaLista(new DataTema("Acto 2, Número 10, Escena (Moderato)", 0, 0, "chaiko","El Lago De Los Cisnes"), "Música Inspiradora");
        iadd.agregarTemaLista(new DataTema("Primer Movimiento (Allegro non troppo e molto maestoso – Allegro con spirito)", 0, 0, "chaiko","Concierto Para Piano No. 1 En Si Menor, Opus 23"), "Música Inspiradora");
        iadd.agregarTemaLista(new DataTema("Personal Jesus", 0, 0, "dmode","Violator"), "Música Inspiradora");
        iadd.listarListasDeCliente("scarlettO");
        iadd.agregarTemaLista(new DataTema("Girls Just Want To Have Fun", 0, 0, "clauper","She's So Unusual"), "De Todo Un Poco");
        iadd.agregarTemaLista(new DataTema("Time After Time", 0, 0, "clauper","She\'s So Unusual"), "De Todo Un Poco");
        iadd.listarListasDeCliente("Heisenberg");
        iadd.agregarTemaLista(new DataTema("Personal Jesus", 0, 0, "dmode","Violator"), "Para Cocinar");
        iadd.listarListasDeCliente("lachiqui");
        iadd.agregarTemaLista(new DataTema("Girls Just Want To Have Fun", 0, 0, "clauper","She's So Unusual"), "Para Las Chicas");
        iadd.agregarTemaLista(new DataTema("It’s Not Unusual", 0, 0, "tigerOfWales","It's Not Unusual"), "Para Las Chicas");
        iadd.agregarTemaLista(new DataTema("Primer Movimiento (Allegro non troppo e molto maestoso – Allegro con spirito)", 0, 0, "chaiko","Concierto Para Piano No. 1 En Si Menor, Opus 23"), "Para Las Chicas");
        iadd.agregarTemaLista(new DataTema("No Quiero Estudiar", 0, 0, "nicoleneu","Primer Amor"), "Para Las Chicas");
        iadd.agregarTemaLista(new DataTema("Por Ese Hombre", 0, 0, "dyangounchained","Un Loco Como Yo"), "Para Las Chicas");
        iadd.listarListasDeCliente("cbochinche");
        iadd.agregarTemaLista(new DataTema("YMCA", 0, 0, "vpeople","Village People Live and Sleazy"), "Fiesteras");
        iadd.agregarTemaLista(new DataTema("Macho Man", 0, 0, "vpeople","Village People Live and Sleazy"), "Fiesteras");
        iadd.agregarTemaLista(new DataTema("In the Navy", 0, 0, "vpeople","Village People Live and Sleazy"), "Fiesteras");
        iadd.agregarTemaLista(new DataTema("Glory Days", 0, 0, "bruceTheBoss","Born In The U.S.A."), "Fiesteras");
        iadd.agregarTemaLista(new DataTema("Violeta", 0, 0, "alcides","20 Grandes Éxitos"), "Fiesteras");
        iadd.agregarTemaLista(new DataTema("Adagio De Mi País", 0, 0, "tripleNelson","Agua Y Sal"), "Mis Favoritas");
        iadd.agregarTemaLista(new DataTema("Primer Movimiento (Allegro non troppo e molto maestoso – Allegro con spirito)", 0, 0, "chaiko","Concierto Para Piano No. 1 En Si Menor, Opus 23"), "Mis Favoritas");
        iadd.agregarTemaLista(new DataTema("Por Ese Hombre", 0, 0, "lospimpi","Hay Amores Que Matan"), "Mis Favoritas");
        iadd.listarListasDefecto();

    }
    
    private void cargarDatosDePruebaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cargarDatosDePruebaActionPerformed
        try {
            DatosDePrueba();
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(new JDialog(),
                "No se pudieron cargar los datos",
                "Error",
                JOptionPane.PLAIN_MESSAGE);
            System.out.println(ex.getMessage());
        }
    }//GEN-LAST:event_cargarDatosDePruebaActionPerformed

    private void favoritearMItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_favoritearMItemActionPerformed
        MainPanel.removeAll();
        Favoritear frameFavoritear = new Favoritear();
        MainPanel.add(frameFavoritear);
        MainPanel.repaint();
        frameFavoritear.setVisible(true);
    }//GEN-LAST:event_favoritearMItemActionPerformed

    private void agregarTemaListaMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_agregarTemaListaMenuItemActionPerformed
        MainPanel.removeAll();
        AgregarTemaLista frameAgregarTemaLista = new AgregarTemaLista();
        MainPanel.add(frameAgregarTemaLista);
        MainPanel.repaint();
        frameAgregarTemaLista.setVisible(true);
    }//GEN-LAST:event_agregarTemaListaMenuItemActionPerformed

    private void desfavoritearMItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_desfavoritearMItemActionPerformed
        MainPanel.removeAll();
        DesFavoritear frameFavoritear = new DesFavoritear();
        MainPanel.add(frameFavoritear);
        MainPanel.repaint();
        frameFavoritear.setVisible(true);
    }//GEN-LAST:event_desfavoritearMItemActionPerformed

    private void quitarTemaListaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_quitarTemaListaActionPerformed
        MainPanel.removeAll();
        QuitarTemaLista frameQuitarTemaLista = new QuitarTemaLista();
        MainPanel.add(frameQuitarTemaLista);
        MainPanel.repaint();
        frameQuitarTemaLista.setVisible(true);
    }//GEN-LAST:event_quitarTemaListaActionPerformed

    private void suscripcionesMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_suscripcionesMenuItemActionPerformed
        MainPanel.removeAll();
        ActualizarSuscripcion frameSusc = new ActualizarSuscripcion();
        MainPanel.add(frameSusc);
        MainPanel.repaint();
        frameSusc.setVisible(true);
    }//GEN-LAST:event_suscripcionesMenuItemActionPerformed

    private void registroAccesosMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_registroAccesosMenuItemActionPerformed
        MainPanel.removeAll();
        RegistroAccesos registro = new RegistroAccesos();
        MainPanel.add(registro);
        MainPanel.repaint();
        registro.setVisible(true);
    }//GEN-LAST:event_registroAccesosMenuItemActionPerformed

    private void eliminadosMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_eliminadosMenuItemActionPerformed
        MainPanel.removeAll();
        VerArtistasEliminados elim = new VerArtistasEliminados();
        MainPanel.add(elim);
        MainPanel.repaint();
        elim.setVisible(true);
    }//GEN-LAST:event_eliminadosMenuItemActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String[] args) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField AltaPerfil_apellido_input;
    private javax.swing.JLabel AltaPerfil_apellido_label;
    private javax.swing.JScrollPane AltaPerfil_bio_container;
    private javax.swing.JTextArea AltaPerfil_bio_input;
    private javax.swing.JLabel AltaPerfil_bio_label;
    private javax.swing.JButton AltaPerfil_botonimagen_button;
    private javax.swing.JTextField AltaPerfil_email_input;
    private javax.swing.JLabel AltaPerfil_email_label;
    private javax.swing.JLabel AltaPerfil_fechanacimiento_label;
    private javax.swing.JTextField AltaPerfil_nickname_input;
    private javax.swing.JLabel AltaPerfil_nickname_label;
    private javax.swing.JTextField AltaPerfil_nombre_input;
    private javax.swing.JLabel AltaPerfil_nombre_label;
    private javax.swing.JComboBox<String> AltaPerfil_tipousuario_input;
    private javax.swing.JLabel AltaPerfil_tipousuario_label;
    private javax.swing.JTextField AltaPerfil_url_input;
    private javax.swing.JLabel AltaPerfil_url_label;
    private javax.swing.JPanel MainPanel;
    private javax.swing.JMenuItem agregarTemaListaMenuItem;
    private javax.swing.JMenuItem altaGeneroMenuItem;
    private javax.swing.JMenuItem altaLista;
    private javax.swing.JMenuItem altaPerfil;
    private javax.swing.JMenu altasDropDown;
    private javax.swing.JMenuItem cargarDatosDePrueba;
    private javax.swing.JMenuItem cerrarOption;
    private javax.swing.JMenuItem consultaAlbumMenuItem;
    private javax.swing.JMenuItem consultaArtistaMenuItem;
    private javax.swing.JMenuItem consultaClienteMenuItem;
    private javax.swing.JMenuItem consultaListaMenuItem;
    private javax.swing.JMenu consultasDropDown;
    private javax.swing.JMenuItem dejarSeguirMenuItem;
    private javax.swing.JMenuItem desfavoritearMItem;
    private javax.swing.JMenuItem eliminadosMenuItem;
    private javax.swing.JMenuItem favoritearMItem;
    private javax.swing.JInternalFrame internalAltaAlbum;
    private javax.swing.JInternalFrame internalAltaPerfil;
    private javax.swing.JMenu listasMenu;
    private javax.swing.JMenu menuDatos;
    private javax.swing.JMenuBar menuPrincipal;
    private javax.swing.JMenuItem publicarListaMenuItem;
    private javax.swing.JMenuItem quitarTemaLista;
    private javax.swing.JMenuItem registroAccesosMenuItem;
    private javax.swing.JMenuItem seguirMenuItem;
    private javax.swing.JMenu sesionDropDown;
    private javax.swing.JMenu socialMenu;
    private javax.swing.JMenu suscripcionesMenu;
    private javax.swing.JMenuItem suscripcionesMenuItem;
    // End of variables declaration//GEN-END:variables
}
